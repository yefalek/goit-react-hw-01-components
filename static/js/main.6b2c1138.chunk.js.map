{"version":3,"sources":["Profile/profile.js","Statistics/statistics.js","FriendList/friendlist.js","TransactionHistory/transactions.js","App.js","index.js"],"names":["userProfile","name","tag","location","avatar","stats","followers","views","likes","class","src","alt","Statistics","map","id","label","percentage","FriendList","friends","isOnline","width","TransactionHistory","items","type","amount","currency","App","user","title","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"izGAgDiBA,EA9CG,SAAC,GAKJ,IAJbC,EAIY,EAJZA,KACAC,EAGY,EAHZA,IACAC,EAEY,EAFZA,SACAC,EACY,EADZA,OACAC,EAAY,EAAZA,MACQC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACI,sBAAKC,MAAM,UAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBACIC,IAAKN,EACLO,IAAI,gHACJF,MAAM,WAEV,mBAAGA,MAAM,OAAT,SAAiBR,IACjB,oBAAGQ,MAAM,MAAT,cAAiBP,KACjB,mBAAGO,MAAM,WAAT,SAAqBN,OAGzB,qBAAIM,MAAM,QAAV,UACI,+BACI,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBH,OAE5B,+BACI,sBAAMG,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBF,OAE5B,+BACI,sBAAME,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,c,OCH7BI,MA3Bf,YAAgC,IAAVP,EAAS,EAATA,MAClB,OACI,0BAASI,MAAM,aAAf,UACI,oBAAIA,MAAM,QAAV,0BACA,oBAAIA,MAAM,YAAV,SAEKJ,EAAMQ,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,WAAZ,OACP,qBAAaP,MAAM,OAAnB,UACI,sBAAMA,MAAM,QAAZ,SAAqBM,IACrB,sBAAMN,MAAM,aAAZ,SAA0BO,MAFrBF,Y,OCoBdG,MA5Bf,YAAkC,IAAZC,EAAW,EAAXA,QAClB,OACI,qBAAKT,MAAM,oBAAX,SACI,oBAAIA,MAAM,cAAV,SACKS,EAAQL,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAMkB,EAArB,EAAqBA,SAArB,OAET,qBAAaV,MAAM,cAAnB,UACI,sBAAMA,MAAK,iBAAaU,EAAW,SAAW,aAC9C,qBAAKV,MAAM,cAAcC,IAAKN,EAAQO,IAAKV,EAAMmB,MAAM,OACvD,mBAAGX,MAAM,OAAT,SAAiBR,MAHZa,W,OC4BdO,MAlCf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,wBAAOR,GAAG,sBAAV,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGQ,EAAMT,KAAI,gBAAGC,EAAH,EAAGA,GAAIS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHEX,YCLJ,SAASY,IACtB,OACE,sBAAKjB,MAAQ,UAAb,UACE,cAAC,EAAD,CACER,KAAM0B,EAAK1B,KACXC,IAAKyB,EAAKzB,IACVC,SAAUwB,EAAKxB,SACfC,OAAQuB,EAAKvB,OACbC,MAAOsB,EAAKtB,QAGd,cAAC,EAAD,CACEuB,MAAM,eAAevB,MAAOwB,IAG9B,cAAC,EAAD,CAAYX,QAASA,IAErB,cAAC,EAAD,CAAoBI,MAAOQ,OCpBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACP,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.6b2c1138.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst userProfile = ({\r\n    name,\r\n    tag,\r\n    location,\r\n    avatar,\r\n    stats }) => {\r\n    const { followers, views, likes } = stats;\r\n    return (\r\n        <div class=\"profile\">\r\n            <div class=\"description\">\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    class=\"avatar\"\r\n                />\r\n                <p class=\"name\">{name}</p>\r\n                <p class=\"tag\">@{tag}</p>\r\n                <p class=\"location\">{location}</p>\r\n            </div>\r\n\r\n            <ul class=\"stats\">\r\n                <li>\r\n                    <span class=\"label\">Followers</span>\r\n                    <span class=\"quantity\">{followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span class=\"label\">Views</span>\r\n                    <span class=\"quantity\">{views}</span>\r\n                </li>\r\n                <li>\r\n                    <span class=\"label\">Likes</span>\r\n                    <span class=\"quantity\">{likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nuserProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.number.isRequired,\r\n  };\r\n  \r\n  export default userProfile;","import PropTypes from 'prop-types';\r\n\r\n\r\nfunction Statistics({ stats }) {\r\n    return (\r\n        <section class=\"statistics\">\r\n            <h2 class=\"title\">Upload stats</h2>\r\n            <ul class=\"stat-list\">\r\n                \r\n                {stats.map(({id,label, percentage}) => (\r\n                    <li key={id} class=\"item\">\r\n                        <span class=\"label\">{label}</span>\r\n                        <span class=\"percentage\">{percentage}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n    \r\n}\r\n\r\n\r\nStatistics.propTypes = {stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nfunction FriendList({ friends }) {\r\n    return (\r\n        <div class=\"friends-container\">\r\n            <ul class=\"friend-list\">\r\n                {friends.map(({ id, avatar, name, isOnline }) => (\r\n                    \r\n                    <li key={id} class=\"friend-item\">\r\n                        <span class={`status ${ isOnline ? 'online' : 'offline' }`}></span>\r\n                        <img class=\"friend-icon\" src={avatar} alt={name} width=\"48\" />\r\n                        <p class=\"name\">{name}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nFriendList.propTypes = {stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table id=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n    \r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {stats: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n  }),\r\n),};\r\n\r\nexport default TransactionHistory;","import user from './Profile/user.json';\nimport Profile from './Profile/profile';\nimport statisticalData from './Statistics/statistical-data.json';\nimport Statistics from './Statistics/statistics';\nimport friends from './FriendList/friends.json';\nimport FriendList from './FriendList/friendlist';\nimport transactions from './TransactionHistory/transactions.json';\nimport TransactionHistory from './TransactionHistory/transactions';\n\n\nexport default function App() {\n  return (\n    <div class = \"general\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics\n        title=\"Upload stats\" stats={statisticalData} />\n      {/* <Statistics stats={statisticalData} /> */}\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\n","// import './main.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}